---
interface Props {
  title: string
  description?: string
}

const { title, description = 'Admin Panel' } = Astro.props
const user = Astro.locals.user
const currentPath = Astro.url.pathname
---

<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <title>{title} - Brutal Astrology Admin</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;600;700&family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      :root {
        --primary: #4CA6DF;
        --secondary: #BFFF00;
        --accent: #FF6B00;
        --tertiary: #EE99B8;
        --deep: #5E18EB;
        --success: #00FF00;
        --error: #FF0000;
        --bg: #ffffff;
        --text: #000000;
      }

      body {
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        background: var(--bg);
        color: var(--text);
        min-height: 100vh;
      }

      h1, h2, h3, h4, h5, h6 {
        font-family: 'Space Grotesk', system-ui;
        font-weight: 700;
      }

      /* Header */
      .header {
        background: var(--primary);
        border-bottom: 4px solid var(--text);
        padding: 0;
      }

      .header-content {
        max-width: 1400px;
        margin: 0 auto;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      .logo {
        font-family: 'Space Grotesk', system-ui;
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text);
        text-decoration: none;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .logo:hover {
        background: rgba(0, 0, 0, 0.1);
      }

      .nav {
        display: flex;
        align-items: center;
      }

      .nav-link {
        color: var(--text);
        text-decoration: none;
        padding: 1.25rem 1.5rem;
        font-weight: 600;
        border-left: 2px solid var(--text);
        transition: background 0.2s;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .nav-link:hover {
        background: rgba(0, 0, 0, 0.1);
      }

      .nav-link.active {
        background: var(--secondary);
      }

      .user-info {
        padding: 1rem 1.5rem;
        border-left: 2px solid var(--text);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      /* Main Content */
      .main-content {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem 1.5rem;
      }

      /* Brutal UI Components */
      .brutal-card {
        background: var(--bg);
        border: 4px solid var(--text);
        box-shadow: 8px 8px 0 var(--text);
        padding: 1.5rem;
        margin-bottom: 2rem;
      }

      .brutal-button {
        padding: 0.75rem 1.5rem;
        background: var(--secondary);
        border: 3px solid var(--text);
        font-family: 'Space Grotesk', system-ui;
        font-size: 0.875rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        cursor: pointer;
        transition: all 0.2s;
        box-shadow: 4px 4px 0 var(--text);
        text-decoration: none;
        display: inline-block;
        color: var(--text);
      }

      .brutal-button:hover {
        transform: translate(-2px, -2px);
        box-shadow: 6px 6px 0 var(--text);
      }

      .brutal-button:active {
        transform: translate(2px, 2px);
        box-shadow: 2px 2px 0 var(--text);
      }

      .brutal-button-danger {
        background: var(--error);
        color: white;
      }

      .brutal-button-primary {
        background: var(--primary);
        color: white;
      }

      /* Logout Form */
      .logout-form {
        display: inline;
      }

      .logout-btn {
        background: var(--error);
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        font-family: 'Inter', system-ui;
        font-weight: 600;
        cursor: pointer;
        font-size: 0.875rem;
      }

      .logout-btn:hover {
        background: darkred;
      }

      /* Responsive */
      @media (max-width: 768px) {
        .header-content {
          flex-direction: column;
          align-items: stretch;
        }

        .nav {
          flex-direction: column;
        }

        .nav-link {
          border-left: none;
          border-top: 2px solid var(--text);
        }

        .user-info {
          border-left: none;
          border-top: 2px solid var(--text);
        }
      }
    </style>
  </head>
  <body>
    <!-- Header -->
    <header class="header">
      <div class="header-content">
        <a href="/admin" class="logo">
          <span>‚ôå</span>
          <span>Brutal Astrology</span>
        </a>

        <nav class="nav">
          <a
            href="/admin"
            class:list={['nav-link', { active: currentPath === '/admin' }]}
          >
            üìä Dashboard
          </a>
          <a
            href="/admin/posts"
            class:list={['nav-link', { active: currentPath.startsWith('/admin/posts') }]}
          >
            üìù Posts
          </a>
          <a
            href="/admin/analytics"
            class:list={['nav-link', { active: currentPath === '/admin/analytics' }]}
          >
            üìà Analytics
          </a>
          <a
            href="/admin"
            class:list={['nav-link']}
          >
            ‚öôÔ∏è Settings
          </a>

          <div class="user-info">
            <span>üë§ {user?.username || 'Admin'}</span>
            <form method="POST" action="/api/admin/auth/logout" class="logout-form">
              <button type="submit" class="logout-btn">Sair</button>
            </form>
          </div>
        </nav>
      </div>
    </header>

    <!-- Main Content -->
    <main class="main-content">
      <slot />
    </main>

    <script>
      // Handle logout
      const logoutForm = document.querySelector('.logout-form') as HTMLFormElement

      logoutForm?.addEventListener('submit', async (e) => {
        e.preventDefault()

        try {
          const response = await fetch('/api/admin/auth/logout', {
            method: 'POST',
          })

          if (response.ok) {
            window.location.href = '/admin/login'
          }
        } catch (error) {
          console.error('Logout error:', error)
          alert('Erro ao fazer logout')
        }
      })
    </script>
  </body>
</html>
