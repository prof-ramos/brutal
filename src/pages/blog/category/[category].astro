---
import Layout from '@layouts/Default.astro'
import BlogList from '@components/blog/BlogList.astro'
import BlogFilters from '@components/blog/BlogFilters.astro'
import {getAllPosts, type SanityPost} from '@lib/sanity'

interface PathContext {
  posts: SanityPost[]
  allPosts: SanityPost[]
  category: string
  categoryLabel: string
}

export async function getStaticPaths() {
  const allPosts = await getAllPosts()
  const categoryMap = new Map<string, {label: string; posts: SanityPost[]}>()

  allPosts.forEach((post) => {
    post.categories?.forEach((category) => {
      if (!category?.slug) return
      const entry = categoryMap.get(category.slug)
      if (entry) {
        entry.posts.push(post)
      } else {
        categoryMap.set(category.slug, {
          label: category.title ?? category.slug,
          posts: [post],
        })
      }
    })
  })

  return Array.from(categoryMap.entries()).map(([slug, data]) => ({
    params: {category: slug},
    props: {
      posts: data.posts,
      allPosts,
      category: slug,
      categoryLabel: data.label,
    },
  }))
}

const {posts: categoryPosts, allPosts, category, categoryLabel}: PathContext = Astro.props

const sortedPosts = [...categoryPosts].sort((a, b) => {
  const dateA = new Date(a.publishedAt ?? a.updatedAt ?? 0).getTime()
  const dateB = new Date(b.publishedAt ?? b.updatedAt ?? 0).getTime()
  return dateB - dateA
})
---

<Layout
  title={`${categoryLabel} | Blog de Astrologia`}
  description={`Explore artigos sobre ${categoryLabel.toLowerCase()} no blog da Psicóloga em Outra Dimensão.`}
  pageTitle={`Categoria: ${categoryLabel}`}
>
  <main class="bg-primary p-6 min-h-screen">
    <div class="max-w-6xl mx-auto">
      <div class="mb-8">
        <nav class="mb-4">
          <a href="/blog" class="text-blue-600 hover:text-blue-800 transition-colors">
            ← Voltar ao Blog
          </a>
        </nav>

        <h1 class="text-4xl md:text-6xl lg:text-8xl font-bold heading-font mb-4">
          {categoryLabel}
        </h1>

        <p class="text-xl text-gray-700 max-w-2xl">
          {sortedPosts.length} {sortedPosts.length === 1 ? 'artigo encontrado' : 'artigos encontrados'} nesta categoria.
        </p>
      </div>

      <BlogFilters posts={allPosts} currentCategory={category} />

      {sortedPosts.length > 0 ? (
        <BlogList posts={sortedPosts} />
      ) : (
        <div class="bg-white border-4 border-black p-8 text-center">
          <h2 class="text-2xl font-bold mb-4">Nenhum artigo encontrado</h2>
          <p class="text-gray-600 mb-6">
            Não há artigos publicados nesta categoria ainda.
          </p>
          <a
            href="/blog"
            class="inline-block px-6 py-3 bg-black text-white border-4 border-black hover:bg-white hover:text-black transition-colors font-bold"
          >
            Ver todos os artigos
          </a>
        </div>
      )}
    </div>
  </main>
</Layout>

<style>
  .heading-font {
    font-family: 'Impact', 'Arial Black', sans-serif;
    text-transform: uppercase;
    letter-spacing: 2px;
  }
</style>
