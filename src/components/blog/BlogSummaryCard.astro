---
import type { CollectionEntry } from 'astro:content';
import { Pill, Button } from '@eliancodes/brutal-ui';
import SummaryCard from '../generic/SummaryCard.astro';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;

// Category translations for Portuguese
const categoryLabels: Record<string, string> = {
  'cognitive-psychology': 'Psicologia Cognitiva',
  'behavioral-psychology': 'Psicologia Comportamental',
  'clinical-psychology': 'Psicologia Cl√≠nica',
  'developmental-psychology': 'Psicologia do Desenvolvimento',
  'social-psychology': 'Psicologia Social',
  'neuropsychology': 'Neuropsicologia',
  'positive-psychology': 'Psicologia Positiva',
  'therapy-techniques': 'T√©cnicas Terap√™uticas',
  'mental-health': 'Sa√∫de Mental',
  'research-insights': 'Pesquisas',
  'case-studies': 'Estudos de Caso',
  'wellness-tips': 'Bem-estar'
};

const difficultyLabels: Record<string, string> = {
  'beginner': 'Iniciante',
  'intermediate': 'Intermedi√°rio',
  'advanced': 'Avan√ßado'
};

const targetAudienceLabels: Record<string, string> = {
  'general-public': 'P√∫blico Geral',
  'students': 'Estudantes',
  'professionals': 'Profissionais',
  'researchers': 'Pesquisadores',
  'clinicians': 'Cl√≠nicos'
};

// Format reading time
const formatReadingTime = (minutes?: number) => {
  if (!minutes) return '';
  return `${minutes} min de leitura`;
};

// Format date
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('pt-BR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<article class="bg-white border-4 border-black card-shadow p-6 h-full flex flex-col">
  <!-- Featured Badge -->
  {post.data.featured && (
    <div class="mb-4">
      <span class="bg-yellow-400 border-2 border-black px-3 py-1 text-sm font-bold uppercase">
        Em Destaque
      </span>
    </div>
  )}

  <!-- Category -->
  {post.data.category && (
    <div class="mb-2">
      <a
        href={`/blog/category/${post.data.category}`}
        class="text-sm font-bold text-blue-600 hover:text-blue-800 uppercase tracking-wider"
      >
        {categoryLabels[post.data.category] || post.data.category}
      </a>
    </div>
  )}

  <!-- Title -->
  <h2 class="text-xl md:text-2xl font-bold mb-3 line-clamp-2 heading-font">
    <a href={`/blog/${post.id}/`} class="text-black hover:text-blue-600 transition-colors">
      {post.data.title}
    </a>
  </h2>

  <!-- Meta Information -->
  <div class="text-sm text-gray-600 mb-4 space-y-1">
    <div class="flex items-center justify-between">
      <span>Por {post.data.author}</span>
      <span>{formatDate(post.data.pubDate)}</span>
    </div>

    <div class="flex items-center justify-between text-xs">
      {post.data.readingTime && (
        <span class="bg-gray-100 px-2 py-1 border border-gray-300">
          üìñ {formatReadingTime(post.data.readingTime)}
        </span>
      )}

      {post.data.difficulty && (
        <span class={`px-2 py-1 border border-black ${
          post.data.difficulty === 'beginner' ? 'bg-green-100 text-green-800' :
          post.data.difficulty === 'intermediate' ? 'bg-yellow-100 text-yellow-800' :
          'bg-red-100 text-red-800'
        }`}>
          {difficultyLabels[post.data.difficulty]}
        </span>
      )}
    </div>
  </div>

  <!-- Description -->
  <p class="text-gray-700 mb-4 flex-grow line-clamp-3">
    {post.data.description}
  </p>

  <!-- Content Warnings -->
  {post.data.contentWarning && post.data.contentWarning.length > 0 && (
    <div class="mb-4">
      <div class="bg-yellow-50 border-l-4 border-yellow-400 p-3">
        <p class="text-sm text-yellow-700">
          <strong>Aviso:</strong> Cont√©m discuss√µes sobre {post.data.contentWarning.join(', ')}.
        </p>
      </div>
    </div>
  )}

  <!-- Tags -->
  <div class="mb-4">
    <ul class="flex flex-wrap gap-2">
      {post.data.tags?.slice(0, 4).map((tag) => (
        <li>
          <a
            href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
            class="inline-block bg-gray-100 hover:bg-black hover:text-white border border-gray-300 px-2 py-1 text-xs transition-colors"
          >
            #{tag}
          </a>
        </li>
      ))}
      {post.data.tags && post.data.tags.length > 4 && (
        <li class="text-xs text-gray-500 px-2 py-1">
          +{post.data.tags.length - 4} mais
        </li>
      )}
    </ul>
  </div>

  <!-- Target Audience -->
  {post.data.targetAudience && (
    <div class="mb-4 text-sm">
      <span class="text-gray-600">P√∫blico-alvo: </span>
      <span class="font-semibold">
        {targetAudienceLabels[post.data.targetAudience] || post.data.targetAudience}
      </span>
    </div>
  )}

  <!-- Action Button -->
  <div class="mt-auto">
    <Button href={`/blog/${post.id}/`} class="w-full">
      Ler artigo completo &rarr;
    </Button>
  </div>

  <!-- Draft Status -->
  {post.data.draft && (
    <div class="mt-2">
      <span class="bg-orange-400 border-2 border-black px-3 py-1 text-sm font-bold uppercase">
        Rascunho
      </span>
    </div>
  )}
</article>

<style>
  .heading-font {
    font-family: 'Impact', 'Arial Black', sans-serif;
    letter-spacing: 0.5px;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .card-shadow {
    box-shadow: 4px 4px 0px 0px rgba(0, 0, 0, 1);
  }
</style>
