---
import type { CollectionEntry } from 'astro:content';
import { Pill, Button } from '@eliancodes/brutal-ui';
import SummaryCard from '../generic/SummaryCard.astro';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;

// Category translations for astrology with icons
const categoryData: Record<string, {label: string, icon: string}> = {
  'zodiac-signs': {label: 'Signos do Zodíaco', icon: 'i-uil-star'},
  'horoscopes': {label: 'Horóscopos', icon: 'i-uil-moon'},
  'compatibility': {label: 'Compatibilidade', icon: 'i-uil-heart'},
  'birth-charts': {label: 'Mapa Astral', icon: 'i-uil-chart'},
  'moon-phases': {label: 'Fases da Lua', icon: 'i-uil-moon'},
  'planetary-transits': {label: 'Trânsitos', icon: 'i-uil-arrows-h'},
  'tarot-readings': {label: 'Tarô', icon: 'i-uil-layers'},
  'crystal-healing': {label: 'Cristais', icon: 'i-uil-diamond'},
  'spiritual-guidance': {label: 'Orientação Espiritual', icon: 'i-uil-star'},
  'cosmic-humor': {label: 'Humor Cósmico', icon: 'i-uil-smile'},
  'astro-memes': {label: 'Memes Astrais', icon: 'i-uil-grin'},
  'sign-roasting': {label: 'Roast de Signos', icon: 'i-uil-fire'}
};

const difficultyLabels: Record<string, string> = {
  'beginner': 'Iniciante',
  'intermediate': 'Intermediário',
  'advanced': 'Avançado'
};

const targetAudienceData: Record<string, {label: string, icon: string}> = {
  'astrology-beginners': {label: 'Iniciantes na Astrologia', icon: 'i-uil-seedling'},
  'zodiac-enthusiasts': {label: 'Entusiastas do Zodíaco', icon: 'i-uil-star'},
  'spiritual-seekers': {label: 'Buscadores Espirituais', icon: 'i-uil-search'},
  'cosmic-skeptics': {label: 'Céticos Cósmicos', icon: 'i-uil-question-circle'},
  'meme-lovers': {label: 'Amantes de Memes', icon: 'i-uil-grin'}
};

// Format reading time
const formatReadingTime = (minutes?: number) => {
  if (!minutes) return '';
  return `${minutes} min de leitura`;
};

// Format date
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('pt-BR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};

// Zodiac sign icons
const zodiacIcons: Record<string, string> = {
  'aries': 'i-uil-fire', 'taurus': 'i-uil-trees', 'gemini': 'i-uil-chat', 'cancer': 'i-uil-moon',
  'leo': 'i-uil-star', 'virgo': 'i-uil-flower', 'libra': 'i-uil-balance-scale', 'scorpio': 'i-uil-bug',
  'sagittarius': 'i-uil-arrow', 'capricorn': 'i-uil-mountains', 'aquarius': 'i-uil-water-drop-slash', 'pisces': 'i-uil-fish'
};
---

<article class="bg-white border-4 border-black card-shadow p-6 h-full flex flex-col">
  <!-- Featured Badge -->
  {post.data.featured && (
    <div class="mb-4">
      <span class="bg-secondary border-4 border-black px-4 py-2 text-sm font-black uppercase tracking-wider brutal-pill animate-pulse flex items-center gap-2">
        <div class="i-uil-star"></div> EM DESTAQUE <div class="i-uil-star"></div>
      </span>
    </div>
  )}

  <!-- Category -->
  {post.data.category && categoryData[post.data.category] && (
    <div class="mb-3">
      <a
        href={`/blog/category/${post.data.category}`}
        class="inline-flex items-center gap-2 bg-black text-white px-3 py-2 text-sm font-bold uppercase tracking-wider hover:bg-deep transition-colors brutal-pill"
      >
        <div class={`${categoryData[post.data.category].icon} text-sm`}></div>
        {categoryData[post.data.category].label}
      </a>
    </div>
  )}

  <!-- Title -->
  <h2 class="text-xl md:text-2xl font-bold mb-3 line-clamp-2 heading-font flex items-start gap-2">
    {post.data.zodiacSign && (
      <div class={`${zodiacIcons[post.data.zodiacSign]} text-2xl flex-shrink-0 text-deep`}></div>
    )}
    <a href={`/blog/${post.id}/`} class="text-black hover:text-deep transition-colors">
      {post.data.title}
    </a>
  </h2>

  <!-- Meta Information -->
  <div class="text-sm text-gray-600 mb-4 space-y-1">
    <div class="flex items-center justify-between">
      <span>Por {post.data.author}</span>
      <span>{formatDate(post.data.pubDate)}</span>
    </div>

    <div class="flex items-center justify-between text-xs">
      {post.data.readingTime && (
        <span class="bg-gray-100 px-2 py-1 border border-gray-300 flex items-center gap-1">
          <div class="i-uil-book-open text-xs"></div> {formatReadingTime(post.data.readingTime)}
        </span>
      )}

      <div class="flex gap-2">
        {post.data.difficulty && (
          <span class={`px-2 py-1 border border-black text-xs font-bold ${
            post.data.difficulty === 'beginner' ? 'bg-green-100 text-green-800' :
            post.data.difficulty === 'intermediate' ? 'bg-yellow-100 text-yellow-800' :
            'bg-red-100 text-red-800'
          }`}>
            {difficultyLabels[post.data.difficulty]}
          </span>
        )}
        {post.data.humorLevel && (
          <span class={`px-2 py-1 border border-black text-xs font-bold flex items-center gap-1 ${
            post.data.humorLevel === 'subtle' ? 'bg-blue-100 text-blue-800' :
            post.data.humorLevel === 'moderate' ? 'bg-orange-100 text-orange-800' :
            post.data.humorLevel === 'savage' ? 'bg-red-100 text-red-800' :
            'bg-purple-100 text-purple-800'
          }`}>
            <div class={
              post.data.humorLevel === 'subtle' ? 'i-uil-smile' :
              post.data.humorLevel === 'moderate' ? 'i-uil-grin' :
              post.data.humorLevel === 'savage' ? 'i-uil-fire' : 'i-uil-times-circle'
            }></div>
            {post.data.humorLevel === 'subtle' ? 'Sutil' :
             post.data.humorLevel === 'moderate' ? 'Moderado' :
             post.data.humorLevel === 'savage' ? 'Savage' : 'Brutal'}
          </span>
        )}
      </div>
    </div>
  </div>

  <!-- Description -->
  <p class="text-gray-700 mb-4 flex-grow line-clamp-3">
    {post.data.description}
  </p>

  <!-- Content Warnings -->
  {post.data.contentWarning && post.data.contentWarning.length > 0 && (
    <div class="mb-4">
      <div class="bg-yellow-50 border-l-4 border-yellow-400 p-3">
        <p class="text-sm text-yellow-700">
          <strong>Aviso:</strong> Contém discussões sobre {post.data.contentWarning.join(', ')}.
        </p>
      </div>
    </div>
  )}

  <!-- Tags -->
  <div class="mb-4">
    <ul class="flex flex-wrap gap-2">
      {post.data.tags?.slice(0, 4).map((tag) => (
        <li>
          <a
            href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
            class="inline-block bg-tertiary hover:bg-accent border-2 border-black px-3 py-1 text-xs font-bold text-black transition-colors brutal-pill"
          >
            #{tag}
          </a>
        </li>
      ))}
      {post.data.tags && post.data.tags.length > 4 && (
        <li class="text-xs font-bold text-deep px-2 py-1 flex items-center gap-1">
          +{post.data.tags.length - 4} mais <div class="i-uil-star text-xs"></div>
        </li>
      )}
    </ul>
  </div>

  <!-- Target Audience -->
  {post.data.targetAudience && targetAudienceData[post.data.targetAudience] && (
    <div class="mb-4 text-sm flex items-center gap-2">
      <span class="text-gray-600">Público-alvo:</span>
      <span class="font-semibold flex items-center gap-1">
        <div class={`${targetAudienceData[post.data.targetAudience].icon} text-xs`}></div>
        {targetAudienceData[post.data.targetAudience].label}
      </span>
    </div>
  )}

  <!-- Action Button -->
  <div class="mt-auto">
    <Button href={`/blog/${post.id}/`} class="w-full">
      Ler artigo completo &rarr;
    </Button>
  </div>

  <!-- Draft Status -->
  {post.data.draft && (
    <div class="mt-2">
      <span class="bg-orange-400 border-2 border-black px-3 py-1 text-sm font-bold uppercase">
        Rascunho
      </span>
    </div>
  )}
</article>

<style>
  .heading-font {
    font-family: 'Impact', 'Arial Black', sans-serif;
    letter-spacing: 0.5px;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .card-shadow {
    box-shadow: 4px 4px 0px 0px rgba(0, 0, 0, 1);
  }
</style>
