---
import type { CollectionEntry } from 'astro:content';

interface Props {
  posts: CollectionEntry<'blog'>[];
  currentCategory?: string;
  currentTags?: string[];
}

const { posts, currentCategory, currentTags = [] } = Astro.props;

// Extract unique categories and tags from all posts
const categories = [...new Set(posts
  .map(post => post.data.category)
  .filter(Boolean)
  .sort()
)];

const allTags = [...new Set(posts
  .flatMap(post => post.data.tags || [])
  .sort()
)];

const popularTags = allTags.slice(0, 15); // Show most common tags
---

<div class="bg-white border-4 border-black p-6 mb-8">
  <h3 class="text-2xl font-bold mb-4 heading-font">Filtrar Artigos</h3>

  <!-- Categories Filter -->
  <div class="mb-6">
    <h4 class="text-lg font-bold mb-2">Categorias</h4>
    <div class="flex flex-wrap gap-2">
      <a
        href="/blog"
        class={`px-3 py-1 border-2 border-black transition-colors ${
          !currentCategory
            ? 'bg-black text-white'
            : 'bg-white text-black hover:bg-black hover:text-white'
        }`}
      >
        Todas
      </a>
      {categories.map(category => {
        const categoryLabel = {
          'cognitive-psychology': 'Psicologia Cognitiva',
          'behavioral-psychology': 'Psicologia Comportamental',
          'clinical-psychology': 'Psicologia Clínica',
          'developmental-psychology': 'Psicologia do Desenvolvimento',
          'social-psychology': 'Psicologia Social',
          'neuropsychology': 'Neuropsicologia',
          'positive-psychology': 'Psicologia Positiva',
          'therapy-techniques': 'Técnicas Terapêuticas',
          'mental-health': 'Saúde Mental',
          'research-insights': 'Pesquisas',
          'case-studies': 'Estudos de Caso',
          'wellness-tips': 'Bem-estar'
        }[category] || category;

        return (
          <a
            href={`/blog/category/${category}`}
            class={`px-3 py-1 border-2 border-black transition-colors ${
              currentCategory === category
                ? 'bg-black text-white'
                : 'bg-white text-black hover:bg-black hover:text-white'
            }`}
          >
            {categoryLabel}
          </a>
        );
      })}
    </div>
  </div>

  <!-- Tags Filter -->
  <div class="mb-6">
    <h4 class="text-lg font-bold mb-2">Tags Populares</h4>
    <div class="flex flex-wrap gap-2">
      {popularTags.map(tag => (
        <a
          href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
          class={`px-3 py-1 border-2 border-black text-sm transition-colors ${
            currentTags.includes(tag)
              ? 'bg-black text-white'
              : 'bg-white text-black hover:bg-black hover:text-white'
          }`}
        >
          #{tag}
        </a>
      ))}
    </div>
  </div>

  <!-- Difficulty Filter -->
  <div class="mb-4">
    <h4 class="text-lg font-bold mb-2">Nível</h4>
    <div class="flex gap-2">
      {['beginner', 'intermediate', 'advanced'].map(level => {
        const levelLabel = {
          'beginner': 'Iniciante',
          'intermediate': 'Intermediário',
          'advanced': 'Avançado'
        }[level];

        return (
          <a
            href={`/blog/difficulty/${level}`}
            class="px-3 py-1 border-2 border-black text-sm bg-white text-black hover:bg-black hover:text-white transition-colors"
          >
            {levelLabel}
          </a>
        );
      })}
    </div>
  </div>
</div>

<style>
  .heading-font {
    font-family: 'Impact', 'Arial Black', sans-serif;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
</style>